{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Constants from 'expo-constants';\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport { createBottomTabNavigator, createTopTabNavigator } from 'react-navigation-tabs';\nimport RideScreen from \"./screens/Ride\";\nimport RideHistoryScreen from \"./screens/RideHistory\";\nconsole.reportErrorsAsExceptions = false;\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        }\n      }, React.createElement(AppContainer, null));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar TabContainer = createBottomTabNavigator({\n  Ride: RideScreen,\n  RideHistory: RideHistoryScreen\n});\nvar AppContainer = createAppContainer(TabContainer);","map":{"version":3,"sources":["/Volumes/Coding/NPM/Home Project/H-69/App.js"],"names":["React","Constants","createAppContainer","createSwitchNavigator","createBottomTabNavigator","createTopTabNavigator","RideScreen","RideHistoryScreen","console","reportErrorsAsExceptions","App","flex","Component","TabContainer","Ride","RideHistory","AppContainer"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,kBAA1D;AACA,SACEC,wBADF,EAEEC,qBAFF,QAGO,uBAHP;AAKA,OAAOC,UAAP;AACA,OAAOC,iBAAP;AAEAC,OAAO,CAACC,wBAAR,GAAmC,KAAnC;;IAEqBC,G;;;;;;;;;;;;;WACnB,kBAAS;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAC;AAAN;AAAb,SACE,oBAAC,YAAD,OADF,CADF;AAKD;;;;EAP8BX,KAAK,CAACY,S;;SAAlBF,G;AAUrB,IAAIG,YAAY,GAAGT,wBAAwB,CAAC;AAC1CU,EAAAA,IAAI,EAAER,UADoC;AAE1CS,EAAAA,WAAW,EAAER;AAF6B,CAAD,CAA3C;AAKA,IAAMS,YAAY,GAAGd,kBAAkB,CAACW,YAAD,CAAvC","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, Button } from 'react-native';\nimport Constants from 'expo-constants';\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport {\n  createBottomTabNavigator,\n  createTopTabNavigator,\n} from 'react-navigation-tabs';\n\nimport RideScreen from './screens/Ride';\nimport RideHistoryScreen from './screens/RideHistory';\n\nconsole.reportErrorsAsExceptions = false;\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <View style={{flex:1}} >\n        <AppContainer />\n      </View>\n    );\n  }\n}\n\nvar TabContainer = createBottomTabNavigator({\n  Ride: RideScreen,\n  RideHistory: RideHistoryScreen\n});\n\nconst AppContainer = createAppContainer(TabContainer);\n"]},"metadata":{},"sourceType":"module"}